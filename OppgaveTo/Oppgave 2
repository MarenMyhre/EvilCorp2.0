package Oppgave 2

// Import for Benchmark test
import (
"math/rand"
"testing"
"time"
)

// Oppgave 2a
func Bubble_sort_modified(list []int) {

	n := len(list)
	swapped := true
	{
		for swapped {
			swapped = false
			for i := 1; i < n-1; i++ {
				if list [i-1] > list[i] {
					list[i], list[i-1] = list[i-1], list[i]
					swapped = true

				}
			}

		}
	}

}

// Oppgave 2b
// Benchmark test for Bubble_Sort_Modified
func init() {
seed := time.Now().Unix()
rand.Seed(seed)

}

func perm(n int) (out []int) {
for _, v := range rand.Perm(n) {
out = append(out, v)
}
return
}

//Func BenchmarkBSortModified 100, 1000, 10000 anvender (b *testing.B) som parameter i benchmarktestene og kaller på funksjonen
//benchmarkBSortModified med x og b som parametere for å kjøre benchmark testen
//her er x lik 100, 1000 og 10000.
func BenchmarkBSortModified100(b *testing.B) {
benchmarkBSortModified(100, b)}

func BenchmarkBSortModified1000(b *testing.B) {
benchmarkBSortModified(1000, b)}

func BenchmarkBSortModified10000(b *testing.B) {
benchmarkBSortModified(10000, b)}

//b.StopTimer() stopper testen og b.StartTimer() starter testen.
func benchmarkBSortModified(x int, b *testing.B) {
for j := 0; j < b.N; j++ {
b.StopTimer()
values := perm(x)
b.StartTimer()
Bubble_sort_modified(values)

}
}
